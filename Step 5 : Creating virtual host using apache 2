1. sudo mkdir /var/www/project
2.Assigning ownership of the directory with the current user

sudo chown -R $USER:$USER /var/www/project

3. create and open new apache configuration file

sudo vi /etc/apache2/site-available/project.conf

4. copy the configuration in the conf file

<VirtualHost *:80>
    ServerName projectlamp
    ServerAlias www.projectlamp 
    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/projectlamp
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

With this VirtualHost configuration, we’re telling Apache to serve projectlamp using /var/www/project as its web root directory.
If you would like to test Apache without a domain name, you can remove or comment out the options ServerName and ServerAlias by adding a # character in the beginning of each option’s lines. 
Adding the # character there will tell the program to skip processing the instructions on those lines.

5. You can now use a2ensite command to enable the new virtual host:

sudo a2ensite project

Enabling site project.
To activate the new configuration, you need to run:
  sudo systemctl reload apache2


6. You might want to disable the default website that comes installed with Apache.
This is required if you’re not using a custom domain name, because in this case Apache’s default configuration would overwrite your virtual host. 
To disable Apache’s default website use a2dissite command , type:

sudo a2dissite 000-default

7. sudo apache2ctl configtest

To make sure your configuration file doesn’t contain syntax errors, run:

8. sudo echo 'Hello LAMP from hostname' $(curl -s http://169.254.169.254/latest/meta-data/public-hostname) 'with public IP' 
$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4) > /var/www/projectlamp/index.html

but the web root /var/www/projectlamp is still empty. Create an index.html file in that location so that we can test that the virtual host works as expected:

Your new website is now active, but the web root /var/www/your_domain is still empty. Create an index.html file in that location to test that the virtual host works as expected:

vi /var/www/your_domain/index.html
Include the following content in this file:

/var/www/your_domain/index.html
<html>
  <head>
    <title>your_domain website</title>
  </head>
  <body>
    <h1>Hello World!</h1>

    <p>This is the landing page of <strong>your_domain</strong>.</p>
  </body>
</html>
Save and close the file, then go to your browser and access your server’s domain name or IP address:


